# Define an upstream named 'django_upstream'
upstream django_upstream {
    server django:8000;  # 'django' is the service name in docker-compose.yml
    keepalive 32;         # Optional: Enable keepalive connections
}

server {
    listen 80;
    server_name inshopping.net www.inshopping.net;

    # Redirect all HTTP traffic to HTTPS
    # return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name inshopping.net www.inshopping.net;

    # SSL certificate files
    ssl_certificate /etc/nginx/ssl/server.crt;
    ssl_certificate_key /etc/nginx/ssl/server.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Serve static files
    location /static/ {
        alias /app/staticfiles/;  # Must end with a trailing slash
        try_files $uri $uri/ =404;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
    }

    # Serve media files
    location /media/ {
        alias /app/media/;  # Must end with a trailing slash
        try_files $uri $uri/ =404;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
    }

    # Proxy pass all other requests to Django
    location / {
        proxy_pass http://django_upstream;  # Use the upstream block
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 60s;
        proxy_read_timeout 60s;
        proxy_redirect off;

        # Handle WebSocket connections if needed
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Optional: Handle 404 for static and media
    error_page 404 /404.html;
    location = /404.html {
        internal;
    }
}
