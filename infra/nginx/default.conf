# HTTP Server Block (Redirect all HTTP traffic to HTTPS except for Certbot challenges)
server {
    listen 80;
    server_name inshopping.net www.inshopping.net;

        # Webroot directory for Let's Encrypt
    root /var/www/certbot;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }

   
}

# HTTPS Server Block
server {
    listen 443 ssl;
    server_name inshopping.net www.inshopping.net;

    # SSL certificate and key
    ssl_certificate /etc/letsencrypt/live/inshopping.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/inshopping.net/privkey.pem;

    # SSL configurations for better security
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # HSTS settings (optional but recommended)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Serve static files
    location /static/ {
        alias /app/staticfiles/;  # Must end with a trailing slash
        try_files $uri $uri/ =404;  # Ensures Nginx returns a 404 if the file isn't found
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
    }

    # Serve media files
    location /media/ {
        alias /app/media/;  # Must end with a trailing slash
        try_files $uri $uri/ =404;  # Ensures Nginx returns a 404 if the file isn't found
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
    }

    # Proxy to Django
    location / {
        proxy_pass http://django_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Optional proxy settings for better performance and security
        proxy_connect_timeout 60s;
        proxy_read_timeout 60s;
        proxy_redirect off;

        # Handle WebSocket connections if needed
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Optional: Handle 404 for static and media
    error_page 404 /404.html;
    location = /404.html {
        internal;
    }
}
